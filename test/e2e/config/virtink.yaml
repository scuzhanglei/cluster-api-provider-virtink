---
# E2E test scenario using local dev images and manifests built from the source tree for following providers:
# - cluster-api
# - bootstrap kubeadm
# - control-plane kubeadm
# - virtink

# TODO: build e2e image
# For creating local dev images built from the source tree;
# - from the CAPI repository root, `make docker-build REGISTRY=gcr.io/k8s-staging-cluster-api` to build the cluster-api,
#  bootstrap kubeadm, control-plane kubeadm provider images. This step can be skipped to use upstream images.
# - from the CAPV repository root, `make e2e` to build the vsphere provider image and run e2e tests.

images:
  - name: k8s.gcr.io/cluster-api/cluster-api-controller:v1.2.0
    loadBehavior: tryLoad
  - name: k8s.gcr.io/cluster-api/kubeadm-bootstrap-controller:v1.2.0
    loadBehavior: tryLoad
  - name: k8s.gcr.io/cluster-api/kubeadm-control-plane-controller:v1.2.0
    loadBehavior: tryLoad
  #- name: gcr.io/k8s-staging-cluster-api/capch-manager:e2e
  #  loadBehavior: mustLoad
  - name: quay.io/jetstack/cert-manager-cainjector:v1.8.2
    loadBehavior: tryLoad
  - name: quay.io/jetstack/cert-manager-webhook:v1.8.2
    loadBehavior: tryLoad
  - name: quay.io/jetstack/cert-manager-controller:v1.8.2
    loadBehavior: tryLoad

providers:
  - name: cluster-api
    type: CoreProvider
    versions:
      - name: v1.2.0
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.2.0/core-components.yaml"
        type: "url"
        contract: v1beta1
        files:
          - sourcePath: "../data/shared/metadata.yaml"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
  - name: kubeadm
    type: BootstrapProvider
    versions:
      - name: v1.2.0
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.2.0/bootstrap-components.yaml"
        type: "url"
        contract: "v1beta1"
        files:
          - sourcePath: "../data/shared/metadata.yaml"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
  - name: kubeadm
    type: ControlPlaneProvider
    versions:
      - name: v1.2.0
        value: "https://github.com/kubernetes-sigs/cluster-api/releases/download/v1.2.0/control-plane-components.yaml"
        type: "url"
        files:
          - sourcePath: "../data/shared/metadata.yaml"
        replacements:
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"

  - name: virtink 
    type: InfrastructureProvider
    versions:
      - name: v0.3.0
        value: https://github.com/smartxworks/cluster-api-provider-virtink/releases/download/v0.3.0/infrastructure-components.yaml
        type: url
        contract: v1beta1
        replacements:
          # TODO?
          #- old: gcr.io/cluster-api-provider-vsphere/release/manager:latest
          #  new: gcr.io/k8s-staging-cluster-api/capv-manager:e2e
          - old: "imagePullPolicy: Always"
            new: "imagePullPolicy: IfNotPresent"
        files:
          # Add a cluster template
          - sourcePath: "../../../templates/cluster-template-internal.yaml"
          - sourcePath: "../../../templates/cluster-template.yaml"
          - sourcePath: "../../../metadata.yaml"

variables:
  KUBERNETES_VERSION: "v1.24.0"
  CNI: "./data/cni/calico/calico.yaml"
  EXP_CLUSTER_RESOURCE_SET: "true"
  CONTROL_PLANE_MACHINE_COUNT: 1
  WORKER_MACHINE_COUNT: 1
  IP_FAMILY: "IPv4"
  POD_NETWORK_CIDR: "172.29.0.0/16"
  SERVICE_CIDR: "10.112.0.0/12"

intervals:
  default/wait-controllers: ["5m", "10s"]
  default/wait-cluster: ["5m", "10s"]
  default/wait-control-plane: ["20m", "10s"]
  default/wait-worker-nodes: ["20m", "10s"]
  default/wait-delete-cluster: ["5m", "10s"]
  default/wait-machine-upgrade: ["15m", "1m"]
  default/wait-machine-remediation: ["5m", "10s"]
  node-drain/wait-deployment-available: [ "3m", "10s" ]
  node-drain/wait-machine-deleted: [ "2m", "10s" ]
